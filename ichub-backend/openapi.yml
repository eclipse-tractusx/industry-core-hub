#################################################################################
# Eclipse Tractus-X - Industry Core Hub Backend
#
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the
# License for the specific language govern in permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#################################################################################

openapi: 3.0.1
info:
  title: ICHUB-Backend
  description: The ICHUB-Backend OpenApi 
  version: 0.0.1

servers:
  - url: http://ichub-backend.tx.test/
    description: Backend

paths:
  /shells:
    get:
      summary: Returns a list of all the products that user can see.
      responses:
        "200": # status code
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsMetadata'
  /shell/{id}:
    get:
      summary: Returns a product base an id
      parameters:
        - in: path
          name: id
          required: true
      responses:
        "200": # status code
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductsMetadata'
    delete:
      summary: Delete a product base an id
      parameters:
        - in: path
          name: id
      responses:
        "200": # status code
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductsMetadata'
  /shell:
    post:
      summary: Create a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsAllInfo'
      responses:
        "200": # status code
          description: A JSON array of products
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductsMetadata'

components:
  schemas:
    BPN:
      type: string
    ProductsMetadata:
      type: object
      properties:
        title:
          type: string
        status:
          type: string
          enum: [SHARED, REGISTERED, DRAFT]
        unique_id:
          type: string
        category:
          type: string
    ProductsAllInfo:
      type: object
      properties:
        name:
          type: string
        unique_id:
          type: string
        status:
          type: string
          enum: [SHARED, REGISTERED, DRAFT]
        bpnl:
          type: string
        description:
          type: string
        category:
          type: string
        manufacturerPartId:
          type: string
        country_origin:
          type: string
    
