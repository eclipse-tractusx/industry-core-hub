#################################################################################
#  Copyright (c) 2025 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################

---
name: "Deployment Tests"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:

  test-prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Cache ContainerD Image Layers
        uses: actions/cache@v4
        with:
          path: /var/lib/containerd/io.containerd.snapshotter.v1.overlayfs
          key: ${{ runner.os }}-io.containerd.snapshotter.v1.overlayfs

  ichub-deployment:
    runs-on: ubuntu-latest
    needs: test-prepare
    strategy:
      fail-fast: false
      # this will verify that the official distribution of the Tractus-X Industry Core Helm chart runs on the last 3 Kubernetes versions
      matrix:
        k8s-version: [ "v1.34.0",
                       "v1.33.4",
                       "v1.32.8" ]
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      
      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: '3.14.0'
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0
        with:
          version: 'latest'
      
      - name: Create KinD cluster with registry
        uses: container-tools/kind-action@0ad70e2299366b0e1552c7240f4e4567148f723e # v2.0.4
        with:
          version: v0.22.0
          node_image: kindest/node:${{ matrix.k8s-version }}
          cluster_name: ichub-test-cluster
          wait: 300s
          registry: true
      
      - name: Build and push backend image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: ./ichub-backend
          push: true
          tags: kind-registry:5000/ichub-backend:test

      - name: Build and push frontend image  
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: ./ichub-frontend
          push: true
          tags: kind-registry:5000/ichub-frontend:test

      - name: Wait for cluster to be ready
        run: |
          kubectl cluster-info
          kubectl get nodes
          kubectl wait --for=condition=Ready nodes --all --timeout=300s
      
      - name: Run deployment test using KinD and Helm
        run: |
          # Install Industry Core Hub chart with locally built images from KinD registry
          helm install tx-ichub charts/industry-core-hub \
           -f charts/test-helm-values-ichub.yaml \
           --set backend.image.repository=kind-registry:5000/ichub-backend \
           --set backend.image.tag=test \
           --set backend.image.pullPolicy=IfNotPresent \
           --set frontend.image.repository=kind-registry:5000/ichub-frontend \
           --set frontend.image.tag=test \
           --set frontend.image.pullPolicy=IfNotPresent \
           --dependency-update \
           --wait --timeout=600s
          
          # Debug: Show all resources created
          echo "=== All resources created ==="
          kubectl get all -l app.kubernetes.io/instance=tx-ichub
          
          echo "=== All deployments ==="
          kubectl get deployments -l app.kubernetes.io/instance=tx-ichub
          
          # Wait for deployments to be ready (using correct naming pattern)
          kubectl wait --for=condition=available --timeout=300s deployment -l app.kubernetes.io/instance=tx-ichub,app.kubernetes.io/component=backend || true
          kubectl wait --for=condition=available --timeout=300s deployment -l app.kubernetes.io/instance=tx-ichub,app.kubernetes.io/component=frontend || true
          
          # Check deployment status using labels
          kubectl get deployments -l app.kubernetes.io/instance=tx-ichub -o name | while read deployment; do
            echo "Checking rollout status for $deployment"
            kubectl rollout status "$deployment" --timeout=300s
          done
