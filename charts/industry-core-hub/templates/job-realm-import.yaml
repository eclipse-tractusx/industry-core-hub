{{- /*
* Eclipse Tractus-X - Industry Core Hub
*
* Copyright (c) 2025 LKS Next
* Copyright (c) 2025 Contributors to the Eclipse Foundation
*
* See the NOTICE file(s) distributed with this work for additional
* information regarding copyright ownership.
*
* This program and the accompanying materials are made available under the
* terms of the Apache License, Version 2.0 which is available at
* https://www.apache.org/licenses/LICENSE-2.0.
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
* License for the specific language governing permissions and limitations
* under the License.
*
* SPDX-License-Identifier: Apache-2.0
*/}}
{{- if and .Values.keycloak.enabled .Values.keycloak.realmImport.enabled (eq .Values.keycloak.realmImport.method "job") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-realm-import
  namespace: {{ .Release.Namespace | default "default" | quote }}
  labels:
    {{- include "industry-core-hub.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak-import
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        {{- include "industry-core-hub.labels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak-import
    spec:
      restartPolicy: OnFailure
      containers:
        - name: realm-import
          image: curlimages/curl:8.5.0
          imagePullPolicy: IfNotPresent
          env:
            - name: KEYCLOAK_URL
              value: "http://{{ .Release.Name }}-keycloak:80"
            - name: KEYCLOAK_ADMIN
              value: "{{ .Values.keycloak.auth.adminUser }}"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "{{ .Values.keycloak.auth.adminPassword }}"
          volumeMounts:
            - name: realm-data
              mountPath: /import
          command:
            - /bin/sh
            - -c
          args:
            - |
              set -e
              echo "Starting realm import process..."
              
              # Wait for Keycloak to be available
              echo "Waiting for Keycloak at $KEYCLOAK_URL..."
              for i in $(seq 1 60); do
                if curl -f "$KEYCLOAK_URL/auth/realms/master" >/dev/null 2>&1; then
                  echo "Keycloak is ready!"
                  break
                fi
                echo "Attempt $i: Waiting for Keycloak..."
                sleep 10
                if [ $i -eq 60 ]; then
                  echo "ERROR: Keycloak not available after 10 minutes"
                  exit 1
                fi
              done
              
              # Get admin token
              echo "Getting admin token..."
              TOKEN=$(curl -s -X POST "$KEYCLOAK_URL/auth/realms/master/protocol/openid-connect/token" \
                -H "Content-Type: application/x-www-form-urlencoded" \
                -d "username=$KEYCLOAK_ADMIN" \
                -d "password=$KEYCLOAK_ADMIN_PASSWORD" \
                -d "grant_type=password" \
                -d "client_id=admin-cli" | \
                sed -n 's/.*"access_token":"\([^"]*\)".*/\1/p')
              
              if [ -z "$TOKEN" ]; then
                echo "ERROR: Failed to get admin token"
                exit 1
              fi
              
              # Check if realm already exists
              REALM_NAME="ICHub"
              echo "Checking if realm '$REALM_NAME' exists..."
              REALM_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
                -H "Authorization: Bearer $TOKEN" \
                "$KEYCLOAK_URL/auth/admin/realms/$REALM_NAME")
              
              if [ "$REALM_EXISTS" = "200" ]; then
                echo "Realm '$REALM_NAME' already exists, skipping import"
              else
                echo "Importing realm '$REALM_NAME'..."
                curl -s -X POST "$KEYCLOAK_URL/auth/admin/realms" \
                  -H "Authorization: Bearer $TOKEN" \
                  -H "Content-Type: application/json" \
                  -d @/import/realm-export.json
                
                if [ $? -eq 0 ]; then
                  echo "Realm '$REALM_NAME' imported successfully"
                else
                  echo "ERROR: Failed to import realm '$REALM_NAME'"
                  exit 1
                fi
              fi
              
              echo "Realm import process completed!"
      volumes:
        - name: realm-data
          configMap:
            name: {{ .Release.Name }}-realm-data
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
{{- end }}
