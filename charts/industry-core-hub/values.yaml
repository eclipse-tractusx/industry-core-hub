###############################################################
# Eclipse Tractus-X - Industry Core Hub
#
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

# Default values for industry-core-hub.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""
replicaCount: 1

# -- Backend configuration
backend:
  name: "industry-core-hub-backend"
  image:
    repository: "ichub-backend"
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion
    tag: ""
    # -- Existing image pull secret to use to [obtain the container image from private registries](https://kubernetes.io/docs/concepts/containers/images/#using-a-private-registry)
    pullSecrets: []
  
  service:
    # -- [Service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types) to expose the running application on a set of Pods as a network service
    type: ClusterIP
    port: 80
    targetPort: 8000
  
  podAnnotations: {}

  podLabels: {}

  healthChecks:
    startup:
      enabled: false
      path: "/"
    liveness:
      enabled: false
      path: "/"
    readiness:
      enabled: false
      path: "/"
  
  # -- ingress declaration to expose the industry-core-hub-backend service
  ingress:
    enabled: false
    className: "nginx"
    ## Optional annotations when using the nginx ingress class
    # annotations:
    #   nginx.ingress.kubernetes.io/rewrite-target: "/$1"
    #   nginx.ingress.kubernetes.io/use-regex: "true"
    #   nginx.ingress.kubernetes.io/enable-cors: "true"
    #   # -- Provide CORS allowed origin.
    #   nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.example.org"
    # -- Ingress TLS configuration
    tls: []
      # # -- Provide tls secret.
      # - secretName: ""
      #   # -- Provide host for tls secret.
      #   hosts:
      #     - ""
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service: "backend"
              port: 8000
  
  # -- The [pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) defines privilege and access control settings for a Pod within the deployment
  podSecurityContext:
    seccompProfile:
      # -- Restrict a Container's Syscalls with seccomp
      type: RuntimeDefault
    # -- Runs all processes within a pod with a special uid
    runAsUser: 1000
    # -- Processes within a pod will belong to this guid
    runAsGroup: 3000
    # -- The owner for volumes and any files created within volumes will belong to this guid
    fsGroup: 3000

   # The [container security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) defines privilege and access control settings for a Container within a pod
  securityContext:
    capabilities:
      # -- Specifies which capabilities to drop to reduce syscall attack surface
      drop:
        - ALL
      # -- Specifies which capabilities to add to issue specialized syscalls
      add: []
    # -- Whether the root filesystem is mounted in read-only mode
    readOnlyRootFilesystem: true
    # -- Controls [Privilege Escalation](https://kubernetes.io/docs/concepts/security/pod-security-policy/#privilege-escalation) enabling setuid binaries changing the effective user ID
    allowPrivilegeEscalation: false
    # -- Requires the container to run without root privileges
    runAsNonRoot: true
    # -- The container's process will run with the specified uid
    runAsUser: 10000
    # -- The owner for volumes and any files created within volumes will belong to this guid
    runAsGroup: 10001
  
  # -- specifies additional volume mounts for the backend deployment
  additionalVolumeMounts: []

  # -- additional volume claims for the containers
  additionalVolumes: []

  # -- Persistance configuration for the backend
  persistence:
    # -- Create a PVC to persist storage (if disabled, data and logs will not be persisted)
    enabled: true
    data:
      # -- Enable data persistence
      enabled: true
      # -- Storage size for data
      size: 1Gi
      # -- Access mode for data volume
      accessMode: ReadWriteOnce
      # -- Storage class for data volume
      storageClass: "standard"
    logs:
      # -- Enable logs persistence
      enabled: true
      # -- Storage size for logs
      size: 1Gi
      # -- Access mode for logs volume  
      accessMode: ReadWriteOnce
      # -- Storage class for logs volume
      storageClass: "standard"

  # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
      ephemeral-storage: "2Gi"
    requests:
      cpu: 250m
      memory: 512Mi
      ephemeral-storage: "2Gi"

# [node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) to constrain pods to nodes
nodeSelector: {}

# [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) to configure preferred nodes
tolerations: []

# [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) to configure which nodes the pods can be scheduled on
affinity: {}

updateStrategy:
# -- Update strategy type,
# rolling update configuration parameters,
# [reference](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies).
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# -- Following Catena-X Helm Best Practices
# [reference](https://github.com/eclipse-tractusx/portal/blob/main/charts/portal/values.yaml#L1103).
startupProbe:
  failureThreshold: 30
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1