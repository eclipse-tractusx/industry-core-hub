meta {
  name: 1-1- -DSP- Find Available Digital Twin Registries -AAS-REST-
  type: http
  seq: 1
}

post {
  url: {{your-connector-url}}/management/v3/catalog/request
  body: json
  auth: apikey
}

auth:apikey {
  key: X-Api-Key
  value: {{connector-api-key}}
  placement: header
}

body:json {
  {
    "@context": {
      "edc": "https://w3id.org/edc/v0.0.1/ns/",
      "odrl": "https://www.w3.org/ns/odrl/2/",
      "dct": "http://purl.org/dc/terms/",
      "cx-taxo": "https://w3id.org/catenax/taxonomy"
    },
    "@type": "edc:CatalogRequest",
    "counterPartyAddress": "{{provider-connector-url}}/api/v1/dsp",
    "counterPartyId": "{{provider-bpnl}}",
    "protocol": "dataspace-protocol-http",
        "querySpec": {
          "filterExpression": [
              {
                  "operandLeft": "'http://purl.org/dc/terms/type'.'@id'",
                  "operator": "=",
                  "operandRight": "https://w3id.org/catenax/taxonomy#DigitalTwinRegistry"
              }
          ]
      }
  }
}

tests {
  const jsonResponse = res.getBody();
  if ( jsonResponse["dcat:dataset"] instanceof Object )
  {
      bru.setVar("offerId", jsonResponse["dcat:dataset"]["odrl:hasPolicy"]["@id"]);
      bru.setVar("offerAssetId", jsonResponse["dcat:dataset"]["@id"]);
      // extract permissions, probihitions and obligations
      bru.setVar("contractPermissions", JSON.stringify(jsonResponse["dcat:dataset"]["odrl:hasPolicy"]["odrl:permission"]));
      bru.setVar("contractProhibitions", JSON.stringify(jsonResponse["dcat:dataset"]["odrl:hasPolicy"]["odrl:prohibition"]));
      bru.setVar("contractObligations", JSON.stringify(jsonResponse["dcat:dataset"]["odrl:hasPolicy"]["odrl:obligation"]));
  }
  else{
  
      bru.setVar("offerId", jsonResponse["dcat:dataset"][0]["odrl:hasPolicy"]["@id"]);
      bru.setVar("offerAssetId", jsonResponse["dcat:dataset"][0]["@id"]);
      // extract permissions, probihitions and obligations
      bru.setVar("contractPermissions", JSON.stringify(jsonResponse["dcat:dataset"][0]["odrl:hasPolicy"]["odrl:permission"]));
      bru.setVar("contractProhibitions", JSON.stringify(jsonResponse["dcat:dataset"][0]["odrl:hasPolicy"]["odrl:prohibition"]));
      bru.setVar("contractObligations", JSON.stringify(jsonResponse["dcat:dataset"][0]["odrl:hasPolicy"]["odrl:obligation"]));
  }
  
  var permissions = bru.getVar("contractPermissions");
  var prohibitions = bru.getVar("contractProhibitions");
  var obligations = bru.getVar("contractObligations");
  
  if (permissions.length == 0)
      bru.setVar("contractPermissions", "[]");
  
  if (prohibitions.length == 0)
      bru.setVar("contractProhibitions", "[]");
  
  if (obligations.length == 0)
      bru.setVar("contractObligations", "[]");
}
