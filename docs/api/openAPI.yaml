###############################################################
# Eclipse Tractus-X - Industry Core Hub
#
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

openapi: 3.1.0
info:
  title: Industry Core Hub Backend API
  version: 0.2.0
paths:
  '/v1/part-management/catalog-part/{manufacturer_id}/{manufacturer_part_id}':
    get:
      tags:
        - Part Management
      summary: Part Management Get Catalog Part Details
      operationId: >-
        part_management_get_catalog_part_details_v1_part_management_catalog_part__manufacturer_id___manufacturer_part_id__get
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Id
        - name: manufacturer_part_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Part Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogPartDetailsReadWithStatus'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    put:
      tags:
        - Part Management
      summary: Part Management Update Catalog Part
      operationId: >-
        part_management_update_catalog_part_v1_part_management_catalog_part__manufacturer_id___manufacturer_part_id__put
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Id
        - name: manufacturer_part_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Part Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogPartUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogPartDetailsReadWithStatus'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - Part Management
      summary: Part Management Delete Catalog Part
      operationId: >-
        part_management_delete_catalog_part_v1_part_management_catalog_part__manufacturer_id___manufacturer_part_id__delete
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Id
        - name: manufacturer_part_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Part Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/part-management/catalog-part:
    get:
      tags:
        - Part Management
      summary: Part Management Get Catalog Parts
      operationId: part_management_get_catalog_parts_v1_part_management_catalog_part_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogPartReadWithStatus'
                type: array
                title: >-
                  Response Part Management Get Catalog Parts V1 Part Management
                  Catalog Part Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - Part Management
      summary: Part Management Create Catalog Part
      operationId: part_management_create_catalog_part_v1_part_management_catalog_part_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogPartCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogPartDetailsReadWithStatus'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/part-management/catalog-part/create-partner-mapping:
    post:
      tags:
        - Part Management
      summary: Part Management Create Partner Mapping
      operationId: >-
        part_management_create_partner_mapping_v1_part_management_catalog_part_create_partner_mapping_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerCatalogPartCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerCatalogPartRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/part-management/serialized-part:
    get:
      tags:
        - Part Management
      summary: Part Management Get Serialized Parts
      operationId: >-
        part_management_get_serialized_parts_v1_part_management_serialized_part_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializedPartRead'
                title: >-
                  Response Part Management Get Serialized Parts V1 Part
                  Management Serialized Part Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - Part Management
      summary: Part Management Create Serialized Part
      operationId: >-
        part_management_create_serialized_part_v1_part_management_serialized_part_post
      parameters:
        - name: autoGenerateCatalogPart
          in: query
          required: false
          schema:
            type: boolean
            description: Automatically create the catalog part for this serialized part
            default: false
            title: Autogeneratecatalogpart
          description: Automatically create the catalog part for this serialized part
        - name: autoGeneratePartnerPart
          in: query
          required: false
          schema:
            type: boolean
            description: Automatically create a catalog partner part
            default: true
            title: Autogeneratepartnerpart
          description: Automatically create a catalog partner part
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedPartCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializedPartRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/part-management/serialized-part/query:
    post:
      tags:
        - Part Management
      summary: Part Management Query Serialized Parts
      operationId: >-
        part_management_query_serialized_parts_v1_part_management_serialized_part_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedPartQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SerializedPartRead'
                type: array
                title: >-
                  Response Part Management Query Serialized Parts V1 Part
                  Management Serialized Part Query Post
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/part-management/serialized-part/{partner_catalog_part_id}/{part_instance_id}':
    put:
      tags:
        - Part Management
      summary: Part Management Update Serialized Part
      operationId: >-
        part_management_update_serialized_part_v1_part_management_serialized_part__partner_catalog_part_id___part_instance_id__put
      parameters:
        - name: partner_catalog_part_id
          in: path
          required: true
          schema:
            type: integer
            title: Partner Catalog Part Id
        - name: part_instance_id
          in: path
          required: true
          schema:
            type: string
            title: Part Instance Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedPartUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerializedPartRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - Part Management
      summary: Part Management Delete Serialized Part
      operationId: >-
        part_management_delete_serialized_part_v1_part_management_serialized_part__partner_catalog_part_id___part_instance_id__delete
      parameters:
        - name: partner_catalog_part_id
          in: path
          required: true
          schema:
            type: integer
            title: Partner Catalog Part Id
        - name: part_instance_id
          in: path
          required: true
          schema:
            type: string
            title: Part Instance Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/partner-management/business-partner:
    get:
      tags:
        - Partner Management
      summary: Partner Management Get Business Partners
      operationId: >-
        partner_management_get_business_partners_v1_partner_management_business_partner_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BusinessPartnerRead'
                type: array
                title: >-
                  Response Partner Management Get Business Partners V1 Partner
                  Management Business Partner Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - Partner Management
      summary: Partner Management Create Business Partner
      operationId: >-
        partner_management_create_business_partner_v1_partner_management_business_partner_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/partner-management/business-partner/{business_partner_number}':
    get:
      tags:
        - Partner Management
      summary: Partner Management Get Business Partner
      operationId: >-
        partner_management_get_business_partner_v1_partner_management_business_partner__business_partner_number__get
      parameters:
        - name: business_partner_number
          in: path
          required: true
          schema:
            type: string
            title: Business Partner Number
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/BusinessPartnerRead'
                  - type: 'null'
                title: >-
                  Response Partner Management Get Business Partner V1 Partner
                  Management Business Partner  Business Partner Number  Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/partner-management/business-partner/{business_partner_number}/data-exchange-agreement':
    get:
      tags:
        - Partner Management
      summary: Partner Management Get Data Exchange Agreements
      operationId: >-
        partner_management_get_data_exchange_agreements_v1_partner_management_business_partner__business_partner_number__data_exchange_agreement_get
      parameters:
        - name: business_partner_number
          in: path
          required: true
          schema:
            type: string
            title: Business Partner Number
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataExchangeAgreementRead'
                title: >-
                  Response Partner Management Get Data Exchange Agreements V1
                  Partner Management Business Partner  Business Partner Number 
                  Data Exchange Agreement Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/twin-management/catalog-part-twin:
    get:
      tags:
        - Twin Management
      summary: Twin Management Get Catalog Part Twins
      operationId: >-
        twin_management_get_catalog_part_twins_v1_twin_management_catalog_part_twin_get
      parameters:
        - name: include_data_exchange_agreements
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Data Exchange Agreements
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogPartTwinRead'
                title: >-
                  Response Twin Management Get Catalog Part Twins V1 Twin
                  Management Catalog Part Twin Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - Twin Management
      summary: Twin Management Create Catalog Part Twin
      operationId: >-
        twin_management_create_catalog_part_twin_v1_twin_management_catalog_part_twin_post
      parameters:
        - name: autoCreatePartTypeInformation
          in: query
          required: false
          schema:
            type: boolean
            description: >-
              Automatically create part type information submodel if not
              present.
            default: true
            title: Autocreateparttypeinformation
          description: Automatically create part type information submodel if not present.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogPartTwinCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwinRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/twin-management/catalog-part-twin/{global_id}':
    get:
      tags:
        - Twin Management
      summary: Twin Management Get Catalog Part Twin
      operationId: >-
        twin_management_get_catalog_part_twin_v1_twin_management_catalog_part_twin__global_id__get
      parameters:
        - name: global_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Global Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CatalogPartTwinDetailsRead'
                  - type: 'null'
                title: >-
                  Response Twin Management Get Catalog Part Twin V1 Twin
                  Management Catalog Part Twin  Global Id  Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/twin-management/catalog-part-twin/{manufacturer_id}/{manufacturer_part_id}':
    get:
      tags:
        - Twin Management
      summary: Twin Management Get Catalog Part Twin From Manufacturer
      operationId: >-
        twin_management_get_catalog_part_twin_from_manufacturer_v1_twin_management_catalog_part_twin__manufacturer_id___manufacturer_part_id__get
      parameters:
        - name: manufacturer_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Id
        - name: manufacturer_part_id
          in: path
          required: true
          schema:
            type: string
            title: Manufacturer Part Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CatalogPartTwinDetailsRead'
                  - type: 'null'
                title: >-
                  Response Twin Management Get Catalog Part Twin From
                  Manufacturer V1 Twin Management Catalog Part Twin 
                  Manufacturer Id   Manufacturer Part Id  Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/twin-management/catalog-part-twin/share:
    post:
      tags:
        - Twin Management
      summary: Twin Management Share Catalog Part Twin
      operationId: >-
        twin_management_share_catalog_part_twin_v1_twin_management_catalog_part_twin_share_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogPartTwinShareCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '201':
          description: Catalog part twin shared successfully
        '204':
          description: Catalog part twin already shared
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/twin-management/serialized-part-twin:
    get:
      tags:
        - Twin Management
      summary: Twin Management Get All Serialized Part Twins
      operationId: >-
        twin_management_get_all_serialized_part_twins_v1_twin_management_serialized_part_twin_get
      parameters:
        - name: include_data_exchange_agreements
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Include Data Exchange Agreements
        - name: manufacturerId
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Manufacturerid
        - name: manufacturerPartId
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Manufacturerpartid
        - name: customerPartId
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Customerpartid
        - name: partInstanceId
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Partinstanceid
        - name: van
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Van
        - name: businessPartnerNumber
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: Businesspartnernumber
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializedPartTwinRead'
                title: >-
                  Response Twin Management Get All Serialized Part Twins V1 Twin
                  Management Serialized Part Twin Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - Twin Management
      summary: Twin Management Create Serialized Part Twin
      operationId: >-
        twin_management_create_serialized_part_twin_v1_twin_management_serialized_part_twin_post
      parameters:
        - name: autoCreatePartTypeInformation
          in: query
          required: false
          schema:
            type: boolean
            description: >-
              Automatically create part type information submodel if not
              present.
            default: true
            title: Autocreateparttypeinformation
          description: Automatically create part type information submodel if not present.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedPartTwinCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwinRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/twin-management/serialized-part-twin/{global_id}':
    get:
      tags:
        - Twin Management
      summary: Twin Management Get Serialized Part Twin
      operationId: >-
        twin_management_get_serialized_part_twin_v1_twin_management_serialized_part_twin__global_id__get
      parameters:
        - name: global_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Global Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/SerializedPartTwinDetailsRead'
                  - type: 'null'
                title: >-
                  Response Twin Management Get Serialized Part Twin V1 Twin
                  Management Serialized Part Twin  Global Id  Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/twin-management/twin-aspect:
    post:
      tags:
        - Twin Management
      summary: Twin Management Create Twin Aspect
      operationId: twin_management_create_twin_aspect_v1_twin_management_twin_aspect_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwinAspectCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwinAspectRead'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/twin-management/serialized-part-twin/share:
    post:
      tags:
        - Twin Management
      summary: Twin Management Share Serialized Part Twin
      operationId: >-
        twin_management_share_serialized_part_twin_v1_twin_management_serialized_part_twin_share_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedPartTwinShareCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '201':
          description: Catalog part twin shared successfully
        '204':
          description: Catalog part twin already shared
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/twin-management/serialized-part-twin/unshare:
    post:
      tags:
        - Twin Management
      summary: Twin Management Unshare Serialized Part Twin
      operationId: >-
        twin_management_unshare_serialized_part_twin_v1_twin_management_serialized_part_twin_unshare_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerializedPartTwinUnshareCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '201':
          description: Catalog part twin unshared successfully
        '204':
          description: Catalog part twin already unshared
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/submodel-dispatcher/{semantic_id}/{submodel_id}':
    get:
      tags:
        - Submodel Dispatcher
      summary: Submodel Dispatcher Get Submodel Content Submodel Value
      operationId: >-
        submodel_dispatcher_get_submodel_content_submodel_value_v1_submodel_dispatcher__semantic_id___submodel_id__get
      parameters:
        - name: semantic_id
          in: path
          required: true
          schema:
            type: string
            title: Semantic Id
        - name: submodel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Submodel Id
        - name: Edc-Bpn
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: The BPN of the consumer delivered by the EDC Data Plane
            title: Edc-Bpn
          description: The BPN of the consumer delivered by the EDC Data Plane
        - name: Edc-Contract-Agreement-Id
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: >-
              The contract agreement id of the consumer delivered by the EDC
              Data Plane
            title: Edc-Contract-Agreement-Id
          description: >-
            The contract agreement id of the consumer delivered by the EDC Data
            Plane
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: >-
                  Response Submodel Dispatcher Get Submodel Content Submodel
                  Value V1 Submodel Dispatcher  Semantic Id   Submodel Id  Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/submodel-dispatcher/{semantic_id}/{submodel_id}/submodel':
    get:
      tags:
        - Submodel Dispatcher
      summary: Submodel Dispatcher Get Submodel Content Submodel Value
      operationId: >-
        submodel_dispatcher_get_submodel_content_submodel_value_v1_submodel_dispatcher__semantic_id___submodel_id__submodel_get
      parameters:
        - name: semantic_id
          in: path
          required: true
          schema:
            type: string
            title: Semantic Id
        - name: submodel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Submodel Id
        - name: Edc-Bpn
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: The BPN of the consumer delivered by the EDC Data Plane
            title: Edc-Bpn
          description: The BPN of the consumer delivered by the EDC Data Plane
        - name: Edc-Contract-Agreement-Id
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: >-
              The contract agreement id of the consumer delivered by the EDC
              Data Plane
            title: Edc-Contract-Agreement-Id
          description: >-
            The contract agreement id of the consumer delivered by the EDC Data
            Plane
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: >-
                  Response Submodel Dispatcher Get Submodel Content Submodel
                  Value V1 Submodel Dispatcher  Semantic Id   Submodel Id 
                  Submodel Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    post:
      tags:
        - Submodel Dispatcher
      summary: Submodel Dispatcher Upload Submodel
      operationId: >-
        submodel_dispatcher_upload_submodel_v1_submodel_dispatcher__semantic_id___submodel_id__submodel_post
      parameters:
        - name: semantic_id
          in: path
          required: true
          schema:
            type: string
            title: Semantic Id
        - name: submodel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Submodel Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
              description: The submodel JSON payload
              title: Submodel Payload
      responses:
        '204':
          description: Successful Response
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
    delete:
      tags:
        - Submodel Dispatcher
      summary: Submodel Dispatcher Delete Submodel
      operationId: >-
        submodel_dispatcher_delete_submodel_v1_submodel_dispatcher__semantic_id___submodel_id__submodel_delete
      parameters:
        - name: semantic_id
          in: path
          required: true
          schema:
            type: string
            title: Semantic Id
        - name: submodel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Submodel Id
      responses:
        '204':
          description: Successful Response
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  '/v1/submodel-dispatcher/{semantic_id}/{submodel_id}/submodel/$value':
    get:
      tags:
        - Submodel Dispatcher
      summary: Submodel Dispatcher Get Submodel Content Submodel Value
      operationId: >-
        submodel_dispatcher_get_submodel_content_submodel_value_v1_submodel_dispatcher__semantic_id___submodel_id__submodel__value_get
      parameters:
        - name: semantic_id
          in: path
          required: true
          schema:
            type: string
            title: Semantic Id
        - name: submodel_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Submodel Id
        - name: Edc-Bpn
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: The BPN of the consumer delivered by the EDC Data Plane
            title: Edc-Bpn
          description: The BPN of the consumer delivered by the EDC Data Plane
        - name: Edc-Contract-Agreement-Id
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: >-
              The contract agreement id of the consumer delivered by the EDC
              Data Plane
            title: Edc-Contract-Agreement-Id
          description: >-
            The contract agreement id of the consumer delivered by the EDC Data
            Plane
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: >-
                  Response Submodel Dispatcher Get Submodel Content Submodel
                  Value V1 Submodel Dispatcher  Semantic Id   Submodel Id 
                  Submodel  Value Get
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/share/catalog-part:
    post:
      tags:
        - Sharing Functionality
      summary: Share Catalog Part
      operationId: share_catalog_part_v1_share_catalog_part_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareCatalogPart'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedPartBase'
        '400':
          description: Invalid input provided. Please check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '403':
          description: Access denied. You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '404':
          description: Catalog not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '409':
          description: Catalog part already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '502':
          description: >-
            Bad Gateway - The server received an invalid response from the
            upstream server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
        '503':
          description: Service unavailable. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
  /v1/connection/data/get:
    post:
      tags:
        - Open Connection Management
      summary: Data Get
      operationId: data_get_v1_connection_data_get_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoGetParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/connection/data/post:
    post:
      tags:
        - Open Connection Management
      summary: Data Post
      operationId: data_post_v1_connection_data_post_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoPostParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/discover/registries:
    post:
      tags:
        - Part Discovery Management
      summary: Discover Registries
      operationId: discover_registries_v1_discover_registries_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverRegistriesRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/discover/shells:
    post:
      tags:
        - Part Discovery Management
      summary: Discover Shells
      description: >-
        Discover digital twin shells using query specifications.


        This endpoint discovers available DTRs for the given BPN, negotiates
        access,

        and searches for shells matching the provided query specifications using

        the /lookup/shellsByAssetLink API.


        Args:
            search_request: Request containing counter_party_id (BPN) and query_spec
            
        Returns:
            Response containing discovered shells and metadata
      operationId: discover_shells_v1_discover_shells_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverShellsRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/discover/shell:
    post:
      tags:
        - Part Discovery Management
      summary: Discover Shell
      description: >-
        Discover digital twin shells using query specifications.


        This endpoint discovers available DTRs for the given BPN, negotiates
        access,

        and searches for shells matching the provided query specifications using

        the /lookup/shellsByAssetLink API.


        Args:
            search_request: Request containing counter_party_id (BPN) and query_spec
            
        Returns:
            Response containing discovered shells and metadata
      operationId: discover_shell_v1_discover_shell_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverShellRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/discover/shell/submodels:
    post:
      tags:
        - Part Discovery Management
      summary: Discover Submodels
      description: >-
        Discover a digital twin shell by ID and retrieve its submodel data in
        parallel.


        This endpoint first discovers the shell using the provided ID, then
        analyzes its submodels

        to identify unique assets, pre-negotiates access to those assets in
        parallel, and finally

        fetches the actual submodel data using the negotiated tokens.


        The process is optimized to avoid duplicate asset negotiations when
        multiple submodels

        share the same underlying asset.


        Args:
            search_request: Request containing:
                - counter_party_id (BPN): The Business Partner Number
                - id: The shell ID to discover
                - semantic_id_policies: Mapping of semantic IDs to their acceptable policies
            
        Returns:
            Response containing the shell descriptor with submodel data included
            
        Example semantic_id_policies:

        {
            "urn:samm:io.catenax.part_type_information:1.0.0#PartTypeInformation": [
                {
                    "odrl:permission": {
                        "odrl:action": {
                            "@id": "odrl:use"
                        },
                        "odrl:constraint": {
                            "odrl:and": [
                                {
                                    "odrl:leftOperand": {
                                        "@id": "cx-policy:FrameworkAgreement"
                                    },
                                    "odrl:operator": {
                                        "@id": "odrl:eq"
                                    },
                                    "odrl:rightOperand": "DataExchangeGovernance:1.0"
                                },
                                {
                                    "odrl:leftOperand": {
                                        "@id": "cx-policy:Membership"
                                    },
                                    "odrl:operator": {
                                        "@id": "odrl:eq"
                                    },
                                    "odrl:rightOperand": "active"
                                },
                                {
                                    "odrl:leftOperand": {
                                        "@id": "cx-policy:UsagePurpose"
                                    },
                                    "odrl:operator": {
                                        "@id": "odrl:eq"
                                    },
                                    "odrl:rightOperand": "cx.core.industrycore:1"
                                }
                            ]
                        }
                    },
                    "odrl:prohibition": [],
                    "odrl:obligation": []
                }
            ]
        }
      operationId: discover_submodels_v1_discover_shell_submodels_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverSubmodelsDataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/discover/shell/submodel:
    post:
      tags:
        - Part Discovery Management
      summary: Discover Submodel
      description: >-
        Discover a specific submodel by exact submodel ID using direct API call
        for optimal performance.


        This endpoint uses the DTR API direct endpoint
        /shell-descriptors/:base64aasid/submodel-descriptors/:base64submodelid

        for fast, exact lookup of a specific submodel when you know the exact
        submodel ID.


        Args:
            search_request: Request containing:
                - counter_party_id (BPN): The Business Partner Number
                - id: The shell ID to discover
                - submodel_id: The exact submodel ID to retrieve (required)
                - governance: List of policy dictionaries for the target submodel
            
        Returns:
            Response containing single submodel descriptor and data
            
        Example governance structure:

        [
            {
                "odrl:permission": {
                    "odrl:action": {"@id": "odrl:use"},
                    "odrl:constraint": {
                        "odrl:and": [
                            {
                                "odrl:leftOperand": {"@id": "cx-policy:FrameworkAgreement"},
                                "odrl:operator": {"@id": "odrl:eq"},
                                "odrl:rightOperand": "DataExchangeGovernance:1.0"
                            }
                        ]
                    }
                },
                "odrl:prohibition": [],
                "odrl:obligation": []
            }
        ]
      operationId: discover_submodel_v1_discover_shell_submodel_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverSubmodelDataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/discover/shell/submodels/semanticId:
    post:
      tags:
        - Part Discovery Management
      summary: Discover Submodels By Semantic Id
      description: >-
        Discover submodels by semantic IDs. Searches through all submodels to
        find matches.


        This endpoint discovers the shell and searches through all submodels to
        find those

        that match the provided semantic IDs (requiring all to match). May
        return multiple results.


        Args:
            search_request: Request containing:
                - counter_party_id (BPN): The Business Partner Number
                - id: The shell ID to discover
                - semantic_ids: List of semantic ID objects to search for
                - semantic_id: Single semantic ID (converted to semantic_ids format)
                - governance: List of policy dictionaries for target submodels
            
        Returns:
            Response containing multiple submodel descriptors and data
            
        Example semantic_id format:

        "urn:samm:io.catenax.part_type_information:1.0.0#PartTypeInformation"


        Example semantic_ids format:

        [
            {"type": "GlobalReference", "value": "urn:samm:io.catenax.part_type_information:1.0.0#PartTypeInformation"},
            {"type": "DataElement", "value": "urn:samm:io.catenax.another_aspect:1.0.0#AnotherAspect"}
        ]
      operationId: >-
        discover_submodels_by_semantic_id_v1_discover_shell_submodels_semanticId_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverSubmodelSemanticIdDataRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /health:
    get:
      summary: Check Health
      description: |-
        Retrieves health information from the server

        Returns:
            response: :obj:`status, timestamp`
      operationId: check_health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    BusinessPartnerCreate:
      properties:
        bpnl:
          type: string
          title: Bpnl
          description: The Catena-X Business Partner Number (BPNL) of the business partner.
        name:
          type: string
          title: Name
          description: The unique name of the business partner.
      type: object
      required:
        - bpnl
        - name
      title: BusinessPartnerCreate
    BusinessPartnerRead:
      properties:
        name:
          type: string
          title: Name
          description: The unique name of the business partner.
        bpnl:
          type: string
          title: Bpnl
          description: The Catena-X Business Partner Number (BPNL) of the business partner.
      type: object
      required:
        - name
        - bpnl
      title: BusinessPartnerRead
      description: Represents a partner with a validated name field.
    CatalogPartCreate:
      properties:
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: The decription of the part.
        materials:
          anyOf:
            - items:
                $ref: '#/components/schemas/Material'
              type: array
            - type: 'null'
          title: Materials
          description: >-
            List of materials, e.g. [{'name':'aluminum','share':20.5},
            {'name':'steel','share':75.25}]
          default: []
        width:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The width of the part.
        height:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The height of the part.
        length:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The length of the part.
        weight:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The weight of the part.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
      type: object
      required:
        - manufacturerId
        - manufacturerPartId
        - name
      title: CatalogPartCreate
    CatalogPartDetailsReadWithStatus:
      properties:
        status:
          $ref: '#/components/schemas/SharingStatus'
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: The decription of the part.
        materials:
          anyOf:
            - items:
                $ref: '#/components/schemas/Material'
              type: array
            - type: 'null'
          title: Materials
          description: >-
            List of materials, e.g. [{'name':'aluminum','share':20.5},
            {'name':'steel','share':75.25}]
          default: []
        width:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The width of the part.
        height:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The height of the part.
        length:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The length of the part.
        weight:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The weight of the part.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
      type: object
      required:
        - status
        - manufacturerId
        - manufacturerPartId
        - name
      title: CatalogPartDetailsReadWithStatus
      description: Catalog part read model with status information.
    CatalogPartReadWithStatus:
      properties:
        status:
          $ref: '#/components/schemas/SharingStatus'
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
      type: object
      required:
        - status
        - manufacturerId
        - manufacturerPartId
        - name
      title: CatalogPartReadWithStatus
      description: Simple catalog part read model with status information.
    CatalogPartTwinCreate:
      properties:
        globalId:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Globalid
          description: >-
            Optionally the Catena-X ID / global ID of the digital twin to
            create. If not specified, a new UUID will be created automatically.
        dtrAasId:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Dtraasid
          description: >-
            Optionally the shell descriptor ID ('AAS ID') of the digital twin in
            the Digital Twin Registry. If not specified, a new UUID will be
            created automatically.
        idShort:
          anyOf:
            - type: string
            - type: 'null'
          title: Idshort
          description: >-
            Optionally the idShort of the digital twin in the Digital Twin
            Registry. If not specified, a default value 'Twin-{globalId}' will
            be used.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
      type: object
      required:
        - manufacturerId
        - manufacturerPartId
      title: CatalogPartTwinCreate
    CatalogPartTwinDetailsRead:
      properties:
        additionalContext:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Additionalcontext
          description: >-
            Additional context information about the digital twin. This can
            include various metadata or properties associated with the twin.
            Intended for handling twins by third party apps.
        registrations:
          anyOf:
            - additionalProperties:
                type: boolean
              type: object
            - type: 'null'
          title: Registrations
          description: >-
            A map of registration information for the digital twin in different
            enablement service stacks. The key is the name of the enablement
            service stack.
        aspects:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/TwinAspectRead'
              type: object
            - type: 'null'
          title: Aspects
          description: >-
            A map of aspect information for the digital twin. The key is the
            semantic ID of the aspect. The value is a TwinAspectRead object
            containing details about the aspect.
        globalId:
          type: string
          format: uuid
          title: Globalid
          description: The Catena-X ID / global ID of the digital twin.
        dtrAasId:
          type: string
          format: uuid
          title: Dtraasid
          description: >-
            The shell descriptor ID ('AAS ID') of the digital twin in the
            Digital Twin Registry.
        createdDate:
          type: string
          format: date-time
          title: Createddate
          description: The date when the digital twin was created.
        modifiedDate:
          type: string
          format: date-time
          title: Modifieddate
          description: The date when the digital twin was last modified.
        shares:
          anyOf:
            - items:
                $ref: '#/components/schemas/DataExchangeAgreementRead'
              type: array
            - type: 'null'
          title: Shares
          description: A list of data exchange agreements the digital twin is shared via.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: The decription of the part.
        materials:
          anyOf:
            - items:
                $ref: '#/components/schemas/Material'
              type: array
            - type: 'null'
          title: Materials
          description: >-
            List of materials, e.g. [{'name':'aluminum','share':20.5},
            {'name':'steel','share':75.25}]
          default: []
        width:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The width of the part.
        height:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The height of the part.
        length:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The length of the part.
        weight:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The weight of the part.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
      type: object
      required:
        - globalId
        - dtrAasId
        - createdDate
        - modifiedDate
        - manufacturerId
        - manufacturerPartId
        - name
      title: CatalogPartTwinDetailsRead
      description: >-
        Represents the details of a catalog part twin within the Digital Twin
        Registry.
    CatalogPartTwinRead:
      properties:
        globalId:
          type: string
          format: uuid
          title: Globalid
          description: The Catena-X ID / global ID of the digital twin.
        dtrAasId:
          type: string
          format: uuid
          title: Dtraasid
          description: >-
            The shell descriptor ID ('AAS ID') of the digital twin in the
            Digital Twin Registry.
        createdDate:
          type: string
          format: date-time
          title: Createddate
          description: The date when the digital twin was created.
        modifiedDate:
          type: string
          format: date-time
          title: Modifieddate
          description: The date when the digital twin was last modified.
        shares:
          anyOf:
            - items:
                $ref: '#/components/schemas/DataExchangeAgreementRead'
              type: array
            - type: 'null'
          title: Shares
          description: A list of data exchange agreements the digital twin is shared via.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: The decription of the part.
        materials:
          anyOf:
            - items:
                $ref: '#/components/schemas/Material'
              type: array
            - type: 'null'
          title: Materials
          description: >-
            List of materials, e.g. [{'name':'aluminum','share':20.5},
            {'name':'steel','share':75.25}]
          default: []
        width:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The width of the part.
        height:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The height of the part.
        length:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The length of the part.
        weight:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The weight of the part.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
      type: object
      required:
        - globalId
        - dtrAasId
        - createdDate
        - modifiedDate
        - manufacturerId
        - manufacturerPartId
        - name
      title: CatalogPartTwinRead
      description: Represents a catalog part twin within the Digital Twin Registry.
    CatalogPartTwinShareCreate:
      properties:
        businessPartnerNumber:
          type: string
          title: Businesspartnernumber
          description: >-
            The business partner number of the business partner with which the
            catalog part is shared.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
      type: object
      required:
        - businessPartnerNumber
        - manufacturerId
        - manufacturerPartId
      title: CatalogPartTwinShareCreate
    CatalogPartUpdate:
      properties:
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: The decription of the part.
        materials:
          anyOf:
            - items:
                $ref: '#/components/schemas/Material'
              type: array
            - type: 'null'
          title: Materials
          description: >-
            List of materials, e.g. [{'name':'aluminum','share':20.5},
            {'name':'steel','share':75.25}]
          default: []
        width:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The width of the part.
        height:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The height of the part.
        length:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The length of the part.
        weight:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The weight of the part.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
      type: object
      required:
        - manufacturerId
        - manufacturerPartId
        - name
      title: CatalogPartUpdate
    DataExchangeAgreementRead:
      properties:
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerRead'
          description: The business partner to whom the data exchange agreement applies.
        name:
          type: string
          title: Name
          description: >-
            The unique name of the data exchange agreement with the given
            business partner.
        contracts:
          items:
            $ref: '#/components/schemas/DataExchangeContractRead'
          type: array
          title: Contracts
          description: The list of data exchange contracts that are part of the agreement.
          default: []
      type: object
      required:
        - businessPartner
        - name
      title: DataExchangeAgreementRead
      description: Represents a data exchange agreement between two business partners.
    DataExchangeContractRead:
      properties:
        semanticId:
          type: string
          title: Semanticid
          description: The semantic ID of the data exchange contract applies to.
        edcUsagePolicyId:
          type: string
          title: Edcusagepolicyid
          description: >-
            The ID of the EDC usage policy for the background generated EDC
            contract negotion
      type: object
      required:
        - semanticId
        - edcUsagePolicyId
      title: DataExchangeContractRead
      description: >-
        Represents document type specific contract terms belonging to a data
        exchange agreement.
    DiscoverRegistriesRequest:
      properties:
        counterPartyId:
          type: string
          title: Counterpartyid
          description: The counter party ID of the part.
      type: object
      required:
        - counterPartyId
      title: DiscoverRegistriesRequest
    DiscoverShellRequest:
      properties:
        counterPartyId:
          type: string
          title: Counterpartyid
          description: The counter party ID of the part.
        id:
          type: string
          title: Id
          description: The ID of the AAS.
        dtrGovernance:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Dtrgovernance
          description: >-
            DTR policies to use for connection negotiation. If not provided,
            will use cached policies for automatic contract negotiation.
      type: object
      required:
        - counterPartyId
        - id
      title: DiscoverShellRequest
    DiscoverShellsRequest:
      properties:
        counterPartyId:
          type: string
          title: Counterpartyid
          description: The counter party ID of the part.
        limit:
          anyOf:
            - type: integer
            - type: 'null'
          title: Limit
          description: Maximum number of shells to return per page.
        cursor:
          anyOf:
            - type: string
            - type: 'null'
          title: Cursor
          description: Cursor for pagination.
        querySpec:
          items:
            $ref: '#/components/schemas/QuerySpec'
          type: array
          title: Queryspec
          description: The query specifications for discovering shells.
        dtrGovernance:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Dtrgovernance
          description: >-
            DTR policies to use for connection negotiation. If not provided,
            will use cached policies for automatic contract negotiation.
      type: object
      required:
        - counterPartyId
        - querySpec
      title: DiscoverShellsRequest
    DiscoverSubmodelDataRequest:
      properties:
        counterPartyId:
          type: string
          title: Counterpartyid
          description: The counter party ID of the part.
        id:
          type: string
          title: Id
          description: The ID of the AAS.
        dtrGovernance:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Dtrgovernance
          description: >-
            DTR policies to use for connection negotiation. If not provided,
            will use cached policies for automatic contract negotiation.
        submodelId:
          type: string
          title: Submodelid
          description: The ID of the submodel.
        governance:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Governance
          description: Policies to be accepted for this semantic ID.
      type: object
      required:
        - counterPartyId
        - id
      title: DiscoverSubmodelDataRequest
    DiscoverSubmodelSemanticIdDataRequest:
      properties:
        counterPartyId:
          type: string
          title: Counterpartyid
          description: The counter party ID of the part.
        id:
          type: string
          title: Id
          description: The ID of the AAS.
        dtrGovernance:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Dtrgovernance
          description: >-
            DTR policies to use for connection negotiation. If not provided,
            will use cached policies for automatic contract negotiation.
        semanticIds:
          anyOf:
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - type: 'null'
          title: Semanticids
          description: The semantic IDs of the submodel.
        semanticId:
          anyOf:
            - type: string
            - type: 'null'
          title: Semanticid
          description: The semantic ID of the submodel.
        governance:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Governance
          description: Policies to be accepted for this semantic ID.
      type: object
      required:
        - counterPartyId
        - id
      title: DiscoverSubmodelSemanticIdDataRequest
    DiscoverSubmodelsDataRequest:
      properties:
        counterPartyId:
          type: string
          title: Counterpartyid
          description: The counter party ID of the part.
        id:
          type: string
          title: Id
          description: The ID of the AAS.
        dtrGovernance:
          anyOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - type: 'null'
          title: Dtrgovernance
          description: >-
            DTR policies to use for connection negotiation. If not provided,
            will use cached policies for automatic contract negotiation.
        governance:
          anyOf:
            - additionalProperties:
                items:
                  additionalProperties: true
                  type: object
                type: array
              type: object
            - type: 'null'
          title: Governance
          description: >-
            Mapping of semantic IDs to their acceptable policies for submodel
            data retrieval.
      type: object
      required:
        - counterPartyId
        - id
      title: DiscoverSubmodelsDataRequest
    DoGetParams:
      properties:
        counter_party_id:
          type: string
          title: Counter Party Id
        counter_party_address:
          type: string
          title: Counter Party Address
        filter_expression:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Filter Expression
        path:
          type: string
          title: Path
          default: /
        policies:
          items: {}
          type: array
          title: Policies
        verify:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Verify
          default: false
        headers:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Headers
          default: {}
        timeout:
          anyOf:
            - type: integer
            - type: 'null'
          title: Timeout
        params:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Params
        allow_redirects:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Allow Redirects
          default: false
      type: object
      required:
        - counter_party_id
        - counter_party_address
        - filter_expression
      title: DoGetParams
    DoPostParams:
      properties:
        counter_party_id:
          type: string
          title: Counter Party Id
        counter_party_address:
          type: string
          title: Counter Party Address
        body:
          title: Body
        filter_expression:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Filter Expression
        path:
          type: string
          title: Path
          default: /
        content_type:
          type: string
          title: Content Type
          default: application/json
        policies:
          anyOf:
            - items: {}
              type: array
            - type: 'null'
          title: Policies
        verify:
          type: boolean
          title: Verify
          default: false
        headers:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Headers
        timeout:
          anyOf:
            - type: integer
            - type: 'null'
          title: Timeout
        allow_redirects:
          type: boolean
          title: Allow Redirects
          default: false
      type: object
      required:
        - counter_party_id
        - counter_party_address
        - body
        - filter_expression
      title: DoPostParams
    ErrorDetail:
      properties:
        status:
          type: integer
          title: Status
        message:
          type: string
          title: Message
      type: object
      required:
        - status
        - message
      title: ErrorDetail
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Material:
      properties:
        name:
          type: string
          title: Name
          description: Name of the material
        share:
          type: number
          title: Share
          description: Share of the material in percent. 0-100
      type: object
      required:
        - name
        - share
      title: Material
    Measurement:
      properties:
        value:
          type: number
          title: Value
          description: Numeric value of the measurement
        unit:
          $ref: '#/components/schemas/Unit'
          description: Unit of measure
      type: object
      required:
        - value
        - unit
      title: Measurement
    PartnerCatalogPartCreate:
      properties:
        customerPartId:
          type: string
          title: Customerpartid
          description: >-
            The customer part ID for partner specific mapping of the catalog
            part.
        businessPartnerNumber:
          type: string
          title: Businesspartnernumber
          description: The unique BPNL of the business partner.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
      type: object
      required:
        - customerPartId
        - businessPartnerNumber
        - manufacturerId
        - manufacturerPartId
      title: PartnerCatalogPartCreate
    PartnerCatalogPartRead:
      properties:
        customerPartId:
          type: string
          title: Customerpartid
          description: >-
            The customer part ID for partner specific mapping of the catalog
            part.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerRead'
          description: The business partner to whom the part is being offered.
      type: object
      required:
        - customerPartId
        - manufacturerId
        - manufacturerPartId
        - name
        - businessPartner
      title: PartnerCatalogPartRead
    QuerySpec:
      properties:
        name:
          type: string
          title: Name
          description: The name of the query specification.
        value:
          type: string
          title: Value
          description: The value of the query specification.
      type: object
      required:
        - name
        - value
      title: QuerySpec
    SerializedPartCreate:
      properties:
        businessPartnerNumber:
          type: string
          title: Businesspartnernumber
          description: The unique BPNL of the business partner.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
        van:
          anyOf:
            - type: string
            - type: 'null'
          title: Van
          description: The optional VAN (Vehicle Assembly Number) of the serialized part.
        customerPartId:
          anyOf:
            - type: string
            - type: 'null'
          title: Customerpartid
          description: The customer part ID of the part.
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is produced
      type: object
      required:
        - businessPartnerNumber
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
      title: SerializedPartCreate
    SerializedPartQuery:
      properties:
        manufacturerId:
          anyOf:
            - type: string
            - type: 'null'
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          anyOf:
            - type: string
            - type: 'null'
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        businessPartnerNumber:
          anyOf:
            - type: string
            - type: 'null'
          title: Businesspartnernumber
          description: The unique BPNL of the business partner.
        customerPartId:
          anyOf:
            - type: string
            - type: 'null'
          title: Customerpartid
          description: The customer part ID of the part.
        partInstanceId:
          anyOf:
            - type: string
            - type: 'null'
          title: Partinstanceid
          description: The part instance ID of the serialized part.
        van:
          anyOf:
            - type: string
            - type: 'null'
          title: Van
          description: The optional VAN (Vehicle Assembly Number) of the serialized part.
      type: object
      title: SerializedPartQuery
    SerializedPartRead:
      properties:
        customerPartId:
          type: string
          title: Customerpartid
          description: >-
            The customer part ID for partner specific mapping of the catalog
            part.
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerRead'
          description: The business partner to whom the part is being offered.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        van:
          anyOf:
            - type: string
            - type: 'null'
          title: Van
          description: The optional VAN (Vehicle Assembly Number) of the serialized part.
      type: object
      required:
        - customerPartId
        - businessPartner
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
        - name
      title: SerializedPartRead
    SerializedPartTwinCreate:
      properties:
        globalId:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Globalid
          description: >-
            Optionally the Catena-X ID / global ID of the digital twin to
            create. If not specified, a new UUID will be created automatically.
        dtrAasId:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Dtraasid
          description: >-
            Optionally the shell descriptor ID ('AAS ID') of the digital twin in
            the Digital Twin Registry. If not specified, a new UUID will be
            created automatically.
        idShort:
          anyOf:
            - type: string
            - type: 'null'
          title: Idshort
          description: >-
            Optionally the idShort of the digital twin in the Digital Twin
            Registry. If not specified, a default value 'Twin-{globalId}' will
            be used.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
      type: object
      required:
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
      title: SerializedPartTwinCreate
    SerializedPartTwinDetailsRead:
      properties:
        additionalContext:
          anyOf:
            - additionalProperties: true
              type: object
            - type: 'null'
          title: Additionalcontext
          description: >-
            Additional context information about the digital twin. This can
            include various metadata or properties associated with the twin.
            Intended for handling twins by third party apps.
        registrations:
          anyOf:
            - additionalProperties:
                type: boolean
              type: object
            - type: 'null'
          title: Registrations
          description: >-
            A map of registration information for the digital twin in different
            enablement service stacks. The key is the name of the enablement
            service stack.
        aspects:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/TwinAspectRead'
              type: object
            - type: 'null'
          title: Aspects
          description: >-
            A map of aspect information for the digital twin. The key is the
            semantic ID of the aspect. The value is a TwinAspectRead object
            containing details about the aspect.
        globalId:
          type: string
          format: uuid
          title: Globalid
          description: The Catena-X ID / global ID of the digital twin.
        dtrAasId:
          type: string
          format: uuid
          title: Dtraasid
          description: >-
            The shell descriptor ID ('AAS ID') of the digital twin in the
            Digital Twin Registry.
        createdDate:
          type: string
          format: date-time
          title: Createddate
          description: The date when the digital twin was created.
        modifiedDate:
          type: string
          format: date-time
          title: Modifieddate
          description: The date when the digital twin was last modified.
        shares:
          anyOf:
            - items:
                $ref: '#/components/schemas/DataExchangeAgreementRead'
              type: array
            - type: 'null'
          title: Shares
          description: A list of data exchange agreements the digital twin is shared via.
        customerPartId:
          type: string
          title: Customerpartid
          description: >-
            The customer part ID for partner specific mapping of the catalog
            part.
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerRead'
          description: The business partner to whom the part is being offered.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: The decription of the part.
        materials:
          anyOf:
            - items:
                $ref: '#/components/schemas/Material'
              type: array
            - type: 'null'
          title: Materials
          description: >-
            List of materials, e.g. [{'name':'aluminum','share':20.5},
            {'name':'steel','share':75.25}]
          default: []
        width:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The width of the part.
        height:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The height of the part.
        length:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The length of the part.
        weight:
          anyOf:
            - $ref: '#/components/schemas/Measurement'
            - type: 'null'
          description: The weight of the part.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
        van:
          anyOf:
            - type: string
            - type: 'null'
          title: Van
          description: The optional VAN (Vehicle Assembly Number) of the serialized part.
      type: object
      required:
        - globalId
        - dtrAasId
        - createdDate
        - modifiedDate
        - customerPartId
        - businessPartner
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
        - name
      title: SerializedPartTwinDetailsRead
      description: >-
        Represents the details of a serialized part twin within the Digital Twin
        Registry.
    SerializedPartTwinRead:
      properties:
        globalId:
          type: string
          format: uuid
          title: Globalid
          description: The Catena-X ID / global ID of the digital twin.
        dtrAasId:
          type: string
          format: uuid
          title: Dtraasid
          description: >-
            The shell descriptor ID ('AAS ID') of the digital twin in the
            Digital Twin Registry.
        createdDate:
          type: string
          format: date-time
          title: Createddate
          description: The date when the digital twin was created.
        modifiedDate:
          type: string
          format: date-time
          title: Modifieddate
          description: The date when the digital twin was last modified.
        shares:
          anyOf:
            - items:
                $ref: '#/components/schemas/DataExchangeAgreementRead'
              type: array
            - type: 'null'
          title: Shares
          description: A list of data exchange agreements the digital twin is shared via.
        customerPartId:
          type: string
          title: Customerpartid
          description: >-
            The customer part ID for partner specific mapping of the catalog
            part.
        businessPartner:
          $ref: '#/components/schemas/BusinessPartnerRead'
          description: The business partner to whom the part is being offered.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
        name:
          type: string
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is attached to.
        van:
          anyOf:
            - type: string
            - type: 'null'
          title: Van
          description: The optional VAN (Vehicle Assembly Number) of the serialized part.
      type: object
      required:
        - globalId
        - dtrAasId
        - createdDate
        - modifiedDate
        - customerPartId
        - businessPartner
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
        - name
      title: SerializedPartTwinRead
      description: Represents a serialized part twin within the Digital Twin Registry.
    SerializedPartTwinShareCreate:
      properties:
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
      type: object
      required:
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
      title: SerializedPartTwinShareCreate
    SerializedPartTwinUnshareCreate:
      properties:
        aasId:
          type: string
          format: uuid
          title: Aasid
          description: The AAS ID of the serialized part twin to unshare.
        businessPartnerNumberToUnshare:
          items:
            type: string
          type: array
          title: Businesspartnernumbertounshare
          description: >-
            The business partner number of the business partner with which the
            serialized part twin should be unshared.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The manufacturer ID of the serialized part twin to unshare.
        assetIdNamesFilter:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Assetidnamesfilter
          description: >-
            An optional list of asset ID names to filter the serialized part
            twin unshare operation. If provided, only asset IDs with names in
            this list will be considered for unsharing.
      type: object
      required:
        - aasId
        - businessPartnerNumberToUnshare
        - manufacturerId
      title: SerializedPartTwinUnshareCreate
    SerializedPartUpdate:
      properties:
        businessPartnerNumber:
          type: string
          title: Businesspartnernumber
          description: The unique BPNL of the business partner.
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        partInstanceId:
          type: string
          title: Partinstanceid
          description: The part instance ID of the serialized part.
        van:
          anyOf:
            - type: string
            - type: 'null'
          title: Van
          description: The optional VAN (Vehicle Assembly Number) of the serialized part.
        customerPartId:
          anyOf:
            - type: string
            - type: 'null'
          title: Customerpartid
          description: The customer part ID of the part.
        name:
          anyOf:
            - type: string
            - type: 'null'
          title: Name
          description: The name of the part.
        category:
          anyOf:
            - type: string
            - type: 'null'
          title: Category
          description: The category of the part.
        bpns:
          anyOf:
            - type: string
            - type: 'null'
          title: Bpns
          description: The site number (BPNS) the part is produced
      type: object
      required:
        - businessPartnerNumber
        - manufacturerId
        - manufacturerPartId
        - partInstanceId
      title: SerializedPartUpdate
    ShareCatalogPart:
      properties:
        manufacturerId:
          type: string
          title: Manufacturerid
          description: The BPNL (manufactuer ID) of the part to register.
        manufacturerPartId:
          type: string
          title: Manufacturerpartid
          description: The manufacturer part ID of the part.
        businessPartnerNumber:
          type: string
          title: Businesspartnernumber
          description: >-
            The business partner number of the business partner with which the
            catalog part is shared.
        customerPartId:
          anyOf:
            - type: string
            - type: 'null'
          title: Customerpartid
          description: >-
            The customer part ID which will be mapped to the respective Business
            Partner
      type: object
      required:
        - manufacturerId
        - manufacturerPartId
        - businessPartnerNumber
      title: ShareCatalogPart
      description: >-
        Class that stores the information required by request in the sharing
        functionalit, for catalog parts
    SharedPartBase:
      properties:
        businessPartnerNumber:
          type: string
          title: Businesspartnernumber
          description: >-
            The business partner number of the business partner with which the
            catalog part is shared.
        customerPartIds:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/BusinessPartnerRead'
              type: object
            - type: 'null'
          title: Customerpartids
          description: >-
            The list of customer part IDs mapped to the respective Business
            Partners.
          default: {}
        sharedAt:
          type: string
          format: date-time
          title: Sharedat
          description: The date and time when the catalog part was shared.
        twin:
          anyOf:
            - $ref: '#/components/schemas/CatalogPartTwinDetailsRead'
            - type: 'null'
          description: The digital twin created for part that was shared.
      type: object
      required:
        - businessPartnerNumber
        - sharedAt
      title: SharedPartBase
    SharingStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: SharingStatus
      description: 'The status of the part. (0: draft, 1: pending, 2: registered, 3: shared)'
    TwinAspectCreate:
      properties:
        globalId:
          type: string
          format: uuid
          title: Globalid
          description: >-
            The Catena-X ID / global ID of the digital twin to which the new
            aspect belongs.
        semanticId:
          type: string
          title: Semanticid
          description: >-
            The semantic ID of the new aspect determining the structure of the
            associated payload data.
        submodelId:
          anyOf:
            - type: string
              format: uuid
            - type: 'null'
          title: Submodelid
          description: >-
            The optional ID of the submodel descriptor within the DTR shell
            descriptor for the associated twin. If not specified, a new UUID
            will be created automatically.
        payload:
          additionalProperties: true
          type: object
          title: Payload
          description: >-
            The payload data of the new aspect. This is a JSON object that
            contains the actual data of the aspect. The structure of this object
            is determined by the semantic ID of the aspect.
      type: object
      required:
        - globalId
        - semanticId
        - payload
      title: TwinAspectCreate
    TwinAspectRead:
      properties:
        semanticId:
          type: string
          title: Semanticid
          description: >-
            The semantic ID of the aspect determining the structure of the
            associated payload data.
        submodelId:
          type: string
          format: uuid
          title: Submodelid
          description: >-
            The ID of the submodel descriptor within the DTR shell descriptor
            for the associated twin.
        registrations:
          anyOf:
            - additionalProperties:
                $ref: '#/components/schemas/TwinAspectRegistration'
              type: object
            - type: 'null'
          title: Registrations
          description: >-
            A map of registration information for the aspect in different
            enablement service stacks. The key is the name of the enablement
            service stack.
          default: {}
      type: object
      required:
        - semanticId
        - submodelId
      title: TwinAspectRead
    TwinAspectRegistration:
      properties:
        enablementServiceStackName:
          type: string
          title: Enablementservicestackname
          description: >-
            The name of the enablement service stack where the twin aspect is
            registered.
        status:
          $ref: '#/components/schemas/TwinAspectRegistrationStatus'
          description: The current status of the aspect registration process.
        mode:
          $ref: '#/components/schemas/TwinsAspectRegistrationMode'
          description: The current mode of the aspect registration process.
        createdDate:
          type: string
          format: date-time
          title: Createddate
          description: The date when the aspect was initially registered.
        modifiedDate:
          type: string
          format: date-time
          title: Modifieddate
          description: The date when the registration status information last changed.
      type: object
      required:
        - enablementServiceStackName
        - status
        - mode
        - createdDate
        - modifiedDate
      title: TwinAspectRegistration
      description: >-
        Represents the registration of a twin aspect within an enablement
        service stack.
    TwinAspectRegistrationStatus:
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
      title: TwinAspectRegistrationStatus
      description: >-
        An enumeration of potential status values when a twin aspect is
        registered within the system
    TwinRead:
      properties:
        globalId:
          type: string
          format: uuid
          title: Globalid
          description: The Catena-X ID / global ID of the digital twin.
        dtrAasId:
          type: string
          format: uuid
          title: Dtraasid
          description: >-
            The shell descriptor ID ('AAS ID') of the digital twin in the
            Digital Twin Registry.
        createdDate:
          type: string
          format: date-time
          title: Createddate
          description: The date when the digital twin was created.
        modifiedDate:
          type: string
          format: date-time
          title: Modifieddate
          description: The date when the digital twin was last modified.
        shares:
          anyOf:
            - items:
                $ref: '#/components/schemas/DataExchangeAgreementRead'
              type: array
            - type: 'null'
          title: Shares
          description: A list of data exchange agreements the digital twin is shared via.
      type: object
      required:
        - globalId
        - dtrAasId
        - createdDate
        - modifiedDate
      title: TwinRead
      description: Represents a digital twin within the Digital Twin Registry.
    TwinsAspectRegistrationMode:
      type: integer
      enum:
        - 0
        - 1
        - 2
      title: TwinsAspectRegistrationMode
      description: >-
        An enumeration of potential possibilities how to provide aspects as
        assets wihtin the Eclipse Dataspace Connector
    Unit:
      type: string
      enum:
        - mm
        - cm
        - m
        - g
        - kg
      title: Unit
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
tags:
  - name: Part Management
    description: >-
      Management of part metadata - including catalog parts, serialized parts,
      JIS parts and batches
  - name: Sharing Functionality
    description: >-
      Sharing functionality for catalog part twins - including sharing of parts
      with business partners and automatic generation of digital twins and
      submodels
  - name: Partner Management
    description: >-
      Management of master data around business partners - including business
      partners, data exchange agreements and contracts
  - name: Twin Management
    description: Management of how product information can be managed and shared
  - name: Submodel Dispatcher
    description: >-
      Internal API called by EDC Data Planes or Admins in order the deliver data
      of of the internal used Submodel Service
  - name: Open Connection Management
    description: >-
      Handles the connections from the consumer modules, for specific services
      like digital twin registry and data endpoints
  - name: Part Discovery Management
    description: >-
      Management of the discovery of parts, searching for digital twins and
      digital twins registries
